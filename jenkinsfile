pipeline {
    agent any

    parameters {
        string(name: 'environment', defaultValue: 'terraform', description: 'Workspace/environment file to use for deployment')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
        booleanParam(name: 'destroy', defaultValue: false, description: 'Destroy Terraform build?')
    }


     environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }


    stages {
        stage('checkout') {
                 git branch: 'main', credentialsId: 'a47a2717-1259-48a3-8718-e09a3dfba79f', url: 'https://github.com/gayatripawar2001/Terraform.git'
            }
     stage('terraform init'){
      steps{
        sh 'terraform init'
  }
}

        stage('terraform Plan') {
         when {
                not {
                    equals expected: true, actual: params.destroy
                }
            }
            steps {

                sh 'terraform plan'
         
            }
        }
        stage('Approval') {
           when {
               not {
                   equals expected: true, actual: params.autoApprove
               }
               not {
                    equals expected: true, actual: params.destroy
                }
           }
       }

        stage('Apply') {
            
            steps {
                sh 'terraform apply -input=false tfplan'
            }
        }
        
        stage('Destroy') {
            when {
                equals expected: true, actual: params.destroy
            }
        
        steps {
           sh 'terraform destroy --auto-approve'
        }
    }
  }
}
